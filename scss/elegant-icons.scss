@charset 'UTF-8';

@import 'icons-list';

$ei-font-path: '/fonts' !default;

// Add unicode escape backslash
@function unicode($str) {
  @return unquote('\'')+unquote(str-insert($str, '\\', 1))+unquote('\'');
};

@font-face {
  font-family: 'ElegantIcons';
  src: url('#{$ei-font-path}/ElegantIcons.eot');
  src: url('#{$ei-font-path}/ElegantIcons.eot?#iefix') format('embedded-opentype'),
       url('#{$ei-font-path}/ElegantIcons.woff') format('woff'),
       url('#{$ei-font-path}/ElegantIcons.ttf') format('truetype'),
       url('#{$ei-font-path}/ElegantIcons.svg#ElegantIcons') format('svg');
  font-weight: normal;
  font-style: normal;
}

%common-icon-properties {
	font-family: 'ElegantIcons';
  font-smoothing: antialiased;
	font-style: normal;
  font-variant: normal;
	font-weight: normal;
  line-height: 1;
  speak: none;
	text-transform: none;
}

// Icon definition mixin
@mixin elegant-icon($icon-name) {
  @extend %common-icon-properties;

  content: unicode('#{map-get($ei-icons-list, $icon-name)}');
}

// Set each icon rules
@each $icon-name, $icon-code in $ei-icons-list {
  // Generate sass placeholders
  %#{$icon-name} {
    @include elegant-icon($icon-name);
  }

  // Generate class selectors
  .#{$icon-name}:before {
    @extend %#{$icon-name};
  }
}

.glyph {
    float: left;
    text-align: center;
    padding: 0.75em;
    margin: 0.4em 1.5em 0.75em 0;
    width: 6em;
    text-shadow: none;
}

.glyph_big {
    font-size: 128px;
    color: #59c5dc;
    float: left;
    margin-right: 20px;
}

.glyph div {
    padding-bottom: 10px;
}

.glyph input {
    font-family: consolas, monospace;
    font-size: 12px;
    width: 100%;
    text-align: center;
    border: 0;
    box-shadow: 0 0 0 1px #ccc;
    padding: 0.2em;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
}

.centered {
    margin-left: auto;
    margin-right: auto;
}

.glyph .fs1 {
    font-size: 2em;
}
